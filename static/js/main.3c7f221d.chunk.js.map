{"version":3,"sources":["initial-data.js","task.js","column.js","index.js"],"names":["initialData","tasks","task-1","id","content","task-2","task-3","task-4","columns","column-1","title","taskIds","column-2","column-3","columnOrder","Container","styled","div","_templateObject","Object","taggedTemplateLiteral","props","isDragDisabled","isDragging","Task","_this","this","task","react_default","a","createElement","react_beautiful_dnd_esm","draggableId","index","provided","snapshot","assign","draggableProps","dragHandleProps","innerRef","React","Component","column_templateObject","Title","h3","_templateObject2","TaskList","_templateObject3","isDraggingOver","Column","column_Container","column","droppableId","type","droppableProps","map","task_Task","key","placeholder","src_templateObject","App","state","onDragEnd","result","_objectSpread3","destination","source","start","finish","startTaskIds","Array","from","splice","newStart","objectSpread","finishTaskIds","newFinish","newState","defineProperty","setState","newTaskIds","newColumn","_this2","src_Container","columnId","taskId","column_Column","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.3c7f221d.chunk.js","sourcesContent":["const initialData = {\n  tasks: {\n    'task-1': { id: 'task-1', content: 'Take out the garbage' },\n    'task-2': { id: 'task-2', content: 'Watch my favorite show' },\n    'task-3': { id: 'task-3', content: 'Charge my phone' },\n    'task-4': { id: 'task-4', content: 'Cook dinner' }\n  },\n  columns: {\n    'column-1': {\n      id: 'column-1',\n      title: 'To do',\n      taskIds: ['task-1', 'task-2', 'task-3', 'task-4']\n    },\n    'column-2': {\n      id: 'column-2',\n      title: 'In progress',\n      taskIds: []\n    },\n    'column-3': {\n      id: 'column-3',\n      title: 'Done',\n      taskIds: []\n    }\n  },\n  // Facilitate reordering of the columns\n  columnOrder: ['column-1', 'column-2', 'column-3']\n}\n\nexport default initialData\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Draggable } from 'react-beautiful-dnd'\n\nconst Container = styled.div`\n  border: 1px solid lightgrey;\n  border-radius: 2px;\n  padding: 8px;\n  margin-bottom: 8px;\n  transition: background-color 0.2s ease;\n  background-color: ${props =>\n    props.isDragDisabled\n      ? 'lightgrey'\n      : props.isDragging\n        ? 'lightgreen'\n        : 'white'};\n`\n\nexport default class Task extends React.Component {\n  render() {\n    const isDragDisabled = this.props.task.id === 'task-1'\n    return (\n      <Draggable\n        draggableId={this.props.task.id}\n        index={this.props.index}\n        isDragDisabled={isDragDisabled}\n      >\n        {(provided, snapshot) => (\n          <Container\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            innerRef={provided.innerRef}\n            isDragging={snapshot.isDragging}\n            isDragDisabled={isDragDisabled}\n          >\n            {this.props.task.content}\n          </Container>\n        )}\n      </Draggable>\n    )\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Task from './task'\nimport { Droppable } from 'react-beautiful-dnd'\n\nconst Container = styled.div`\n  margin: 8px;\n  border: 1px solid lightgrey;\n  border-radius: 2px;\n  width: 220px;\n\n  display: flex;\n  flex-direction: column;\n`\nconst Title = styled.h3`\n  padding: 8px;\n`\nconst TaskList = styled.div`\n  padding: 8px;\n  transition: background-color 0.2s ease;\n  background-color: ${props =>\n    props.isDraggingOver ? 'skyblue' : 'white'}\n  flex-grow: 1;\n  min-height: 100px;\n`\n\nexport default class Column extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Title>{this.props.column.title}</Title>\n        <Droppable droppableId={this.props.column.id} type=\"TASK\">\n          {(provided, snapshot) => (\n            <TaskList\n              innerRef={provided.innerRef}\n              {...provided.droppableProps}\n              isDraggingOver={snapshot.isDraggingOver}\n            >\n              {this.props.tasks.map((task, index) => (\n                <Task key={task.id} task={task} index={index} />\n              ))}\n              {provided.placeholder}\n            </TaskList>\n          )}\n        </Droppable>\n      </Container>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport '@atlaskit/css-reset'\nimport { DragDropContext } from 'react-beautiful-dnd'\nimport styled from 'styled-components'\n\nimport initialData from './initial-data'\nimport Column from './column'\n\nconst Container = styled.div`\n  display: flex;\n`\n\nclass App extends React.Component {\n  state = initialData\n\n  onDragEnd = result => {\n    const { destination, source, draggableId } = result\n\n    if (!destination) {\n      return\n    }\n\n    if (\n      destination.droppableId === source.droppableId &&\n      destination.index === source.index\n    ) {\n      return\n    }\n\n    const start = this.state.columns[source.droppableId]\n    const finish = this.state.columns[destination.droppableId]\n\n    if (start === finish) {\n      const newTaskIds = Array.from(start.taskIds)\n      newTaskIds.splice(source.index, 1)\n      newTaskIds.splice(destination.index, 0, draggableId)\n\n      const newColumn = {\n        ...start,\n        taskIds: newTaskIds\n      }\n\n      const newState = {\n        ...this.state,\n        columns: {\n          ...this.state.columns,\n          [newColumn.id]: newColumn\n        }\n      }\n\n      this.setState(newState)\n      return\n    }\n\n    // Moving from one list to another\n    const startTaskIds = Array.from(start.taskIds)\n    startTaskIds.splice(source.index, 1)\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds\n    }\n\n    const finishTaskIds = Array.from(finish.taskIds)\n    finishTaskIds.splice(destination.index, 0, draggableId)\n    const newFinish = {\n      ...finish,\n      taskIds: finishTaskIds\n    }\n\n    const newState = {\n      ...this.state,\n      columns: {\n        ...this.state.columns,\n        [newStart.id]: newStart,\n        [newFinish.id]: newFinish\n      }\n    }\n    this.setState(newState)\n  }\n\n  render() {\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Container>\n          {this.state.columnOrder.map(columnId => {\n            const column = this.state.columns[columnId]\n            const tasks = column.taskIds.map(\n              taskId => this.state.tasks[taskId]\n            )\n\n            return (\n              <Column key={column.id} column={column} tasks={tasks} />\n            )\n          })}\n        </Container>\n      </DragDropContext>\n    )\n  }\n}\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)\n"],"sourceRoot":""}